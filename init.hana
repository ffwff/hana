/*
 * This file is meant for implementing sugar functions,
 * functions that make the code more readable but aren't really performant
 */

// identity function, returns itself
identity(x) = x

// booleans
true = 1
false = 0

// Numbers
integer.even? = float.even? = function(self) return self mod 2 == 0
integer.odd? = float.odd? = function(self) return self mod 2 != 0
integer.positive? = float.positive? = function(self) return self > 0
integer.negative? = float.negative? = function(self) return self < 0
integer.abs = float.abs = abs(x) = x > 0 ? x : -x
integer.round = identity

// math
min(x,y) = x > y ? x : y
max(x,y) = x < y ? x : y
nan = 0.0/0.0
inf = 1.0/0.0

// containers (strings/arrays)
string.empty? = array.empty? = empty?(self) = self.length() == 0

// arrays
array.sum = function(self) return self.reduce(f(prev, curr) = prev + curr, 0)

// modules
modules = record
end
function import(x) begin
    x = realpath(x)
    if modules[x] return
    f = fopen(x, "r")
    if eval(fread(f)) modules[x] = true
end
